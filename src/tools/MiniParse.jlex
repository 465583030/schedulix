//
// $Id: MiniParse.jlex,v 2.0 2004/04/19 15:25:42 ronald Exp $
//
// Copyright (C) 2002 topIT Informationstechnologie GmbH
//
// $Log: MiniParse.jlex,v $
// Revision 2.0  2004/04/19 15:25:42  ronald
// Version 2.0 Started
//
// Revision 1.3  2002/10/22 00:10:48  ronald
// Copyright Zeile ergaenzt
//
// Revision 1.2  2002/01/13 15:36:31  ronald
// sync
//
// Revision 1.1  2002/01/12 00:39:20  ronald
// A lot of work on resources. Some bugs, bit of documentation.
//
//

import java.lang.*;
import java.util.*;
import java.io.*;

%%

%public
%class MiniParse
%type int
%yyeof
%integer

%line
%column
%unicode

%{
private static boolean debug = false;

public static final int STATEMENT  = 100000;

protected void comment(String text)
{
	if(debug) {
		System.out.println("\tcomment: " + text);
	}
}

public int yyline()
{
	return yyline + 1;
}

private int token;
private int pos = 0;
private Object value = new String("");

public boolean advance() throws java.io.IOException
{
	token = yylex();
	return (token != YYEOF);
}

public int token()
{
	return token;
}

public Object value() 
{
	return value;
}

public void initValue() 
{
	value = new String("");
}

public int pos()
{
	return pos;
}

public static void main(String argv[])
{
	int i;

	try {
		MiniParse s = new MiniParse(System.in);
		while(s.advance()) {
			if(s.token() == STATEMENT) {
				System.err.println("\"" + s.value().toString() + "\"");
				s.initValue();
			}
		}
	} catch(IOException ioe) {
		// continue;
	}
}

%}

%state	STRING COMMENT
%%

<YYINITIAL>"//".*		{ comment(yytext()); pos += yytext().length(); }
<YYINITIAL>--.*			{ comment(yytext()); pos += yytext().length(); }
<YYINITIAL>"/*"			{ yybegin(COMMENT); pos += yytext().length(); }
<YYINITIAL>;			{ value = value.toString() + ';'; pos += yytext().length(); return STATEMENT; }
<YYINITIAL>\"			{ pos += yytext().length(); yybegin(STRING); }
<YYINITIAL>[^/-;\"]*		{ value = value.toString() + yytext(); pos += yytext().length(); }
<COMMENT>"*/"			{ pos += yytext().length(); yybegin(YYINITIAL); }
<COMMENT>[^*]*			{ comment(yytext()); pos += yytext().length(); }
<COMMENT>\*			{ comment(yytext()); pos += yytext().length(); }
<STRING>[^\"]*			{ value = value.toString() + '"' + yytext() + '"'; pos += yytext().length(); }
<STRING>\"			{ pos += yytext().length(); yybegin(YYINITIAL); }

